import compiler.NativeImage

plugins {
  id 'compiler.native-image'
  id 'com.gradleup.shadow' version '8.3.5'
  id 'com.palantir.git-version' version '1.0.0'
}

apply plugin: 'scala'
apply plugin: 'application'

repositories {
    mavenCentral()
    maven {
        url 'https://mvnrepository.com/artifact'
    }
}

ext {
    scala_maj = '3'
    scala_ver = "${scala_maj}.3.6"
}

dependencies {
    implementation group: 'org.scala-lang' , name: 'scala3-library_3'  , version: scala_ver
    implementation group: 'org.scala-lang' , name: 'scala3-compiler_3' , version: scala_ver

    testImplementation group: 'org.scalatest', name: "scalatest_${scala_maj}", version: '3.2.18'
    testImplementation group: 'org.scalactic', name: "scalactic_${scala_maj}", version: '3.2.18'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.scalatestplus', name: "junit-4-13_${scala_maj}", version: '3.2.9.0'
}

version gitVersion()

application {
    mainClass.set('cdb.dump')
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
}

sourceSets {
    main {
        scala {
            srcDir 'src/main'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '**/*.sample'
        }
    }
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    minHeapSize = '2g'
    maxHeapSize = '6g'
}

task repl(type:JavaExec) {
    mainClass = 'scala.tools.nsc.MainGenericRunner'
    classpath = sourceSets.main.runtimeClasspath
    standardInput System.in
    args '-usejavacp'
}

compileScala {
    scalaCompileOptions.additionalParameters = [
        '-feature'
      , '-Werror'
      , '-release'
      , '21'
    ]
}

shadowJar {
    manifest {
        attributes 'App-Version': version
    }
}

nativeImage {
    dependsOn shadowJar

    minHeap 1
    maxHeap 3
    maxNew 3

    parameters = [
      NativeImage.Option.STATIC
    , NativeImage.Option.MUSL
    , NativeImage.Option.LINK_BUILD
    ]
}
