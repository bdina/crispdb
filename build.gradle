plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'scala'
apply plugin: 'application'

repositories {
    jcenter()
    maven {
        url 'https://mvnrepository.com/artifact'
    }
}

ext {
    scala_maj = '2.13'
    scala_ver = "${scala_maj}.8"
}

dependencies {
    implementation group: 'org.scala-lang' , name: 'scala-library'  , version: scala_ver
    implementation group: 'org.scala-lang' , name: 'scala-compiler' , version: scala_ver

    testImplementation group: 'org.scalatest', name: "scalatest_${scala_maj}", version: '3.2.9'
    testImplementation group: 'org.scalactic', name: "scalactic_${scala_maj}", version: '3.2.9'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.scalatestplus', name: "junit-4-13_${scala_maj}", version: '3.2.9.0'
}

version = '1.0.0'

application {
    mainClassName = 'cdb.dump'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
}

sourceSets {
    main {
        scala {
            srcDir 'src/main'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '**/*.sample'
        }
    }
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    minHeapSize = "2g"
    maxHeapSize = "6g"
}

task repl(type:JavaExec) {
    main = "scala.tools.nsc.MainGenericRunner"
    classpath = sourceSets.main.runtimeClasspath
    standardInput System.in
    args '-usejavacp'
}

compileScala { // or: tasks.withType(ScalaCompile)
    scalaCompileOptions.additionalParameters = ["-feature","-deprecation","-unchecked","-Xlint","-Xfatal-warnings"]
}
